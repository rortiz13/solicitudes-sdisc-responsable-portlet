/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package la.netco.solicitudes_sdisc.model.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import la.netco.solicitudes_sdisc.model.model.FechaNoHabil;
import la.netco.solicitudes_sdisc.model.model.FechaNoHabilModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the FechaNoHabil service. Represents a row in the &quot;SOLISALAD_FECHA_NO_HABIL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link la.netco.solicitudes_sdisc.model.model.FechaNoHabilModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FechaNoHabilImpl}.
 * </p>
 *
 * @author smontanez
 * @see FechaNoHabilImpl
 * @see la.netco.solicitudes_sdisc.model.model.FechaNoHabil
 * @see la.netco.solicitudes_sdisc.model.model.FechaNoHabilModel
 * @generated
 */
public class FechaNoHabilModelImpl extends BaseModelImpl<FechaNoHabil>
	implements FechaNoHabilModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a fecha no habil model instance should use the {@link la.netco.solicitudes_sdisc.model.model.FechaNoHabil} interface instead.
	 */
	public static final String TABLE_NAME = "SOLISALAD_FECHA_NO_HABIL";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.INTEGER },
			{ "fecha", Types.TIMESTAMP },
			{ "nombre", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SOLISALAD_FECHA_NO_HABIL (id_ INTEGER not null primary key IDENTITY,fecha DATE null,nombre VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SOLISALAD_FECHA_NO_HABIL";
	public static final String DATA_SOURCE = "csjDBDatasource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.la.netco.solicitudes_sdisc.model.model.FechaNoHabil"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.la.netco.solicitudes_sdisc.model.model.FechaNoHabil"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.la.netco.solicitudes_sdisc.model.model.FechaNoHabil"));

	public FechaNoHabilModelImpl() {
	}

	public int getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(int primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return FechaNoHabil.class;
	}

	public String getModelClassName() {
		return FechaNoHabil.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("fecha", getFecha());
		attributes.put("nombre", getNombre());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer id = (Integer)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Date fecha = (Date)attributes.get("fecha");

		if (fecha != null) {
			setFecha(fecha);
		}

		String nombre = (String)attributes.get("nombre");

		if (nombre != null) {
			setNombre(nombre);
		}
	}

	public int getId() {
		return _id;
	}

	public void setId(int id) {
		_id = id;
	}

	public Date getFecha() {
		return _fecha;
	}

	public void setFecha(Date fecha) {
		_fecha = fecha;
	}

	public String getNombre() {
		if (_nombre == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombre;
		}
	}

	public void setNombre(String nombre) {
		_nombre = nombre;
	}

	@Override
	public FechaNoHabil toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (FechaNoHabil)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		FechaNoHabilImpl fechaNoHabilImpl = new FechaNoHabilImpl();

		fechaNoHabilImpl.setId(getId());
		fechaNoHabilImpl.setFecha(getFecha());
		fechaNoHabilImpl.setNombre(getNombre());

		fechaNoHabilImpl.resetOriginalValues();

		return fechaNoHabilImpl;
	}

	public int compareTo(FechaNoHabil fechaNoHabil) {
		int primaryKey = fechaNoHabil.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		FechaNoHabil fechaNoHabil = null;

		try {
			fechaNoHabil = (FechaNoHabil)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = fechaNoHabil.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<FechaNoHabil> toCacheModel() {
		FechaNoHabilCacheModel fechaNoHabilCacheModel = new FechaNoHabilCacheModel();

		fechaNoHabilCacheModel.id = getId();

		Date fecha = getFecha();

		if (fecha != null) {
			fechaNoHabilCacheModel.fecha = fecha.getTime();
		}
		else {
			fechaNoHabilCacheModel.fecha = Long.MIN_VALUE;
		}

		fechaNoHabilCacheModel.nombre = getNombre();

		String nombre = fechaNoHabilCacheModel.nombre;

		if ((nombre != null) && (nombre.length() == 0)) {
			fechaNoHabilCacheModel.nombre = null;
		}

		return fechaNoHabilCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", fecha=");
		sb.append(getFecha());
		sb.append(", nombre=");
		sb.append(getNombre());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("la.netco.solicitudes_sdisc.model.model.FechaNoHabil");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fecha</column-name><column-value><![CDATA[");
		sb.append(getFecha());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombre</column-name><column-value><![CDATA[");
		sb.append(getNombre());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FechaNoHabil.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			FechaNoHabil.class
		};
	private int _id;
	private Date _fecha;
	private String _nombre;
	private FechaNoHabil _escapedModelProxy;
}