/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package la.netco.solicitudes_sdisc.model.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta;
import la.netco.solicitudes_sdisc.model.model.ResponsableRespuestaModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ResponsableRespuesta service. Represents a row in the &quot;SOLISALAD_RESPONSABLE_RESPUESTA&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link la.netco.solicitudes_sdisc.model.model.ResponsableRespuestaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ResponsableRespuestaImpl}.
 * </p>
 *
 * @author smontanez
 * @see ResponsableRespuestaImpl
 * @see la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta
 * @see la.netco.solicitudes_sdisc.model.model.ResponsableRespuestaModel
 * @generated
 */
public class ResponsableRespuestaModelImpl extends BaseModelImpl<ResponsableRespuesta>
	implements ResponsableRespuestaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a responsable respuesta model instance should use the {@link la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta} interface instead.
	 */
	public static final String TABLE_NAME = "SOLISALAD_RESPONSABLE_RESPUESTA";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_responsable", Types.INTEGER },
			{ "respuesta", Types.VARCHAR },
			{ "fecha_respuesta", Types.TIMESTAMP },
			{ "nombre_usuario", Types.VARCHAR },
			{ "id_solicitud", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table SOLISALAD_RESPONSABLE_RESPUESTA (id_responsable INTEGER not null primary key IDENTITY,respuesta VARCHAR(75) null,fecha_respuesta DATE null,nombre_usuario VARCHAR(75) null,id_solicitud INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table SOLISALAD_RESPONSABLE_RESPUESTA";
	public static final String DATA_SOURCE = "csjDBDatasource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta"));

	public ResponsableRespuestaModelImpl() {
	}

	public int getPrimaryKey() {
		return _id_responsable;
	}

	public void setPrimaryKey(int primaryKey) {
		setId_responsable(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_id_responsable);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return ResponsableRespuesta.class;
	}

	public String getModelClassName() {
		return ResponsableRespuesta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_responsable", getId_responsable());
		attributes.put("respuesta", getRespuesta());
		attributes.put("fecha_respuesta", getFecha_respuesta());
		attributes.put("nombre_usuario", getNombre_usuario());
		attributes.put("id_solicitud", getId_solicitud());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer id_responsable = (Integer)attributes.get("id_responsable");

		if (id_responsable != null) {
			setId_responsable(id_responsable);
		}

		String respuesta = (String)attributes.get("respuesta");

		if (respuesta != null) {
			setRespuesta(respuesta);
		}

		Date fecha_respuesta = (Date)attributes.get("fecha_respuesta");

		if (fecha_respuesta != null) {
			setFecha_respuesta(fecha_respuesta);
		}

		String nombre_usuario = (String)attributes.get("nombre_usuario");

		if (nombre_usuario != null) {
			setNombre_usuario(nombre_usuario);
		}

		Integer id_solicitud = (Integer)attributes.get("id_solicitud");

		if (id_solicitud != null) {
			setId_solicitud(id_solicitud);
		}
	}

	public int getId_responsable() {
		return _id_responsable;
	}

	public void setId_responsable(int id_responsable) {
		_id_responsable = id_responsable;
	}

	public String getRespuesta() {
		if (_respuesta == null) {
			return StringPool.BLANK;
		}
		else {
			return _respuesta;
		}
	}

	public void setRespuesta(String respuesta) {
		_respuesta = respuesta;
	}

	public Date getFecha_respuesta() {
		return _fecha_respuesta;
	}

	public void setFecha_respuesta(Date fecha_respuesta) {
		_fecha_respuesta = fecha_respuesta;
	}

	public String getNombre_usuario() {
		if (_nombre_usuario == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombre_usuario;
		}
	}

	public void setNombre_usuario(String nombre_usuario) {
		_nombre_usuario = nombre_usuario;
	}

	public int getId_solicitud() {
		return _id_solicitud;
	}

	public void setId_solicitud(int id_solicitud) {
		_id_solicitud = id_solicitud;
	}

	@Override
	public ResponsableRespuesta toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ResponsableRespuesta)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ResponsableRespuestaImpl responsableRespuestaImpl = new ResponsableRespuestaImpl();

		responsableRespuestaImpl.setId_responsable(getId_responsable());
		responsableRespuestaImpl.setRespuesta(getRespuesta());
		responsableRespuestaImpl.setFecha_respuesta(getFecha_respuesta());
		responsableRespuestaImpl.setNombre_usuario(getNombre_usuario());
		responsableRespuestaImpl.setId_solicitud(getId_solicitud());

		responsableRespuestaImpl.resetOriginalValues();

		return responsableRespuestaImpl;
	}

	public int compareTo(ResponsableRespuesta responsableRespuesta) {
		int primaryKey = responsableRespuesta.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ResponsableRespuesta responsableRespuesta = null;

		try {
			responsableRespuesta = (ResponsableRespuesta)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = responsableRespuesta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ResponsableRespuesta> toCacheModel() {
		ResponsableRespuestaCacheModel responsableRespuestaCacheModel = new ResponsableRespuestaCacheModel();

		responsableRespuestaCacheModel.id_responsable = getId_responsable();

		responsableRespuestaCacheModel.respuesta = getRespuesta();

		String respuesta = responsableRespuestaCacheModel.respuesta;

		if ((respuesta != null) && (respuesta.length() == 0)) {
			responsableRespuestaCacheModel.respuesta = null;
		}

		Date fecha_respuesta = getFecha_respuesta();

		if (fecha_respuesta != null) {
			responsableRespuestaCacheModel.fecha_respuesta = fecha_respuesta.getTime();
		}
		else {
			responsableRespuestaCacheModel.fecha_respuesta = Long.MIN_VALUE;
		}

		responsableRespuestaCacheModel.nombre_usuario = getNombre_usuario();

		String nombre_usuario = responsableRespuestaCacheModel.nombre_usuario;

		if ((nombre_usuario != null) && (nombre_usuario.length() == 0)) {
			responsableRespuestaCacheModel.nombre_usuario = null;
		}

		responsableRespuestaCacheModel.id_solicitud = getId_solicitud();

		return responsableRespuestaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id_responsable=");
		sb.append(getId_responsable());
		sb.append(", respuesta=");
		sb.append(getRespuesta());
		sb.append(", fecha_respuesta=");
		sb.append(getFecha_respuesta());
		sb.append(", nombre_usuario=");
		sb.append(getNombre_usuario());
		sb.append(", id_solicitud=");
		sb.append(getId_solicitud());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("la.netco.solicitudes_sdisc.model.model.ResponsableRespuesta");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_responsable</column-name><column-value><![CDATA[");
		sb.append(getId_responsable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respuesta</column-name><column-value><![CDATA[");
		sb.append(getRespuesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fecha_respuesta</column-name><column-value><![CDATA[");
		sb.append(getFecha_respuesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombre_usuario</column-name><column-value><![CDATA[");
		sb.append(getNombre_usuario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_solicitud</column-name><column-value><![CDATA[");
		sb.append(getId_solicitud());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ResponsableRespuesta.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ResponsableRespuesta.class
		};
	private int _id_responsable;
	private String _respuesta;
	private Date _fecha_respuesta;
	private String _nombre_usuario;
	private int _id_solicitud;
	private ResponsableRespuesta _escapedModelProxy;
}